// Slack Client (discord.gg/slackclient)

package cc.slack.features.modules.impl.exploit;

import cc.slack.Slack;
import cc.slack.events.impl.network.PacketEvent;
import cc.slack.features.modules.api.Category;
import cc.slack.features.modules.api.Module;
import cc.slack.features.modules.api.ModuleInfo;
import cc.slack.features.modules.api.settings.impl.ModeValue;
import cc.slack.utils.client.mc;
import cc.slack.utils.network.PacketUtil;
import cc.slack.utils.other.PrintUtil;
import io.github.nevalackin.radbus.Listen;
import net.minecraft.network.play.client.C02PacketUseEntity;
import net.minecraft.network.play.client.C03PacketPlayer;
import net.minecraft.network.play.server.S37PacketStatistics;
import net.minecraft.network.play.server.S40PacketDisconnect;

@ModuleInfo(
        name = "Kick",
        category = Category.EXPLOIT
)
public class Kick extends Module {

    private final ModeValue<String> mode = new ModeValue<>(new String[]{"Quit", "ClientSideQuit", "InvalidPacket", "Self hurt"});

    public Kick() {
        super();
        addSettings(mode);
    }

    @Override
    public void onEnable() {
        if (mc.getMinecraft().isIntegratedServerRunning()) {
            PrintUtil.message("You can't enable §c§l'Kick' §ain SinglePlayer.");
            return;
        }
        switch (mode.getValue().toLowerCase()) {
            case "quit":
                mc.getWorld().sendQuittingDisconnectingPacket();
                break;
            case "clientsidequit":
                PacketUtil.send(new S40PacketDisconnect());
                break;
            case "invalidpacket":
                mc.getNetHandler().addToSendQueue(new C03PacketPlayer.C04PacketPlayerPosition(Double.NEGATIVE_INFINITY, Double.NEGATIVE_INFINITY, Double.POSITIVE_INFINITY, !mc.getPlayer().onGround));
                break;
            case "self hurt":
                mc.getNetHandler().addToSendQueue(new C02PacketUseEntity(mc.getPlayer(), C02PacketUseEntity.Action.ATTACK));
                break;
        }
    }

    @Listen
    public void onPacket(PacketEvent event) {
        if (event.getPacket() instanceof S37PacketStatistics) {
            Slack.getInstance().getModuleManager().getInstance(Kick.class).setToggle(false);
        }
    }
}
