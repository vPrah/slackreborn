package cc.slack.features.modules.impl.exploit;

import cc.slack.events.impl.network.PacketEvent;
import cc.slack.features.modules.api.Category;
import cc.slack.features.modules.api.Module;
import cc.slack.features.modules.api.ModuleInfo;
import cc.slack.features.modules.api.settings.impl.ModeValue;
import io.github.nevalackin.radbus.Listen;
import net.minecraft.network.play.client.C01PacketChatMessage;

import java.util.Arrays;
import java.util.stream.Collectors;

@ModuleInfo(
        name = "ChatBypass",
        category = Category.EXPLOIT
)
public class ChatBypass extends Module {

    private final ModeValue<String> bypassmode = new ModeValue<>("Bypass", new String[]{"Universocraft"});

    public ChatBypass() {
        addSettings(bypassmode);
    }

    @Listen
    public void onPacket (PacketEvent event) {
        switch (bypassmode.getValue()) {
            case "Universocraft":
                if (event.getPacket() instanceof C01PacketChatMessage) {
                    C01PacketChatMessage c01 = event.getPacket();
                    String message = c01.getMessage();
                    if (!Arrays.stream(new String[]{"/", "!"}).anyMatch(message::startsWith)) {
                        String m = Arrays.stream(message.split(" ")).map(word -> "y" + word).collect(Collectors.joining(" "));
                        (c01).setMessage(m);
                        event.setPacket(c01);
                    }
                }
                break;
            case "XD":
                break;
        }
    }

    @Override
    public String getMode() { return bypassmode.getValue(); }

}
