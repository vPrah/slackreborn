package cc.slack.features.modules.impl.exploit;

import cc.slack.Slack;
import cc.slack.events.impl.network.PacketEvent;
import cc.slack.features.modules.api.Category;
import cc.slack.features.modules.api.Module;
import cc.slack.features.modules.api.ModuleInfo;
import cc.slack.features.modules.api.settings.impl.ModeValue;
import cc.slack.features.modules.impl.render.HUD;
import cc.slack.utils.network.PacketUtil;
import io.github.nevalackin.radbus.Listen;
import io.netty.buffer.Unpooled;
import net.minecraft.network.PacketBuffer;
import net.minecraft.network.play.client.C17PacketCustomPayload;

@ModuleInfo(
        name = "ClientSpoofer",
        category = Category.EXPLOIT
)
public class ClientSpoofer extends Module {

    private final ModeValue<String> spooferValue = new ModeValue<>(new String[]{"Lunar", "Forge","CheatBreaker", "LabyMod", "Geyser"});


    public ClientSpoofer() {
        addSettings(spooferValue);
    }

    @Override
    public void onEnable() {
        Slack.getInstance().getModuleManager().getInstance(HUD.class).addNotification("ClientSpoofer:  Rejoin for ClientSpoofer to work", "", 3500L, Slack.NotificationStyle.WARN);
    }

    @Listen
    public void onPacket (PacketEvent event) {
        if (event.getPacket() instanceof C17PacketCustomPayload) {
                switch (spooferValue.getValue()) {
                    case "Lunar":
                        PacketUtil.sendNoEvent(new C17PacketCustomPayload("REGISTER", (new PacketBuffer(Unpooled.buffer())).writeString("Lunar-Client")));
                        break;
                    case "Forge":
                        PacketUtil.sendNoEvent(new C17PacketCustomPayload("MC|Brand", (new PacketBuffer(Unpooled.buffer())).writeString("FML")));
                        break;
                    case "CheatBreaker":
                        PacketUtil.sendNoEvent(new C17PacketCustomPayload("MC|Brand", (new PacketBuffer(Unpooled.buffer())).writeString("CB")));
                        break;
                    case "Geyser":
                        PacketUtil.sendNoEvent(new C17PacketCustomPayload("MC|Brand", (new PacketBuffer(Unpooled.buffer())).writeString("Geyser")));
                        break;
                    case "LabyMod":
                        PacketUtil.sendNoEvent(new C17PacketCustomPayload("MC|Brand", (new PacketBuffer(Unpooled.buffer())).writeString("LMC")));
                        break;
                }
            event.cancel();
        }
    }

}
